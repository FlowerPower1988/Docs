
#### React projects ####
npx create-react-app project-name --template typescript  // Creates react project with typescript

#### Managing Entity Framework ####
dotnet ef migrations add Init --startup-project C:\Main\Project\Directory\ --project C:\Destination\Project\Directory\
dotnet ef migrations remove --startup-project C:\Main\Project\Directory\  --project C:\Destination\Project\Directory\

#### Managing VS solution via .NET Core CLI ####
dotnet new sln --name Flow.Chat   // This creates new solution
dotnet new webapi -o Api.Name  // Thic creates web api project
dotnet new web -o Flow.Chat.Gateway.Api //This creates empty web project
dotnet sln Flow.Chat.sln add ./Gateway/Flow.Chat.Gateway.Api/Flow.Chat.Gateway.Api.csproj  // This adds project to solution

#### Docker commands ####
docker build -t flowerpower/flowerpower.chat.gateway.api:0.1 .       //build docker image where -t is tag (name)

-Docker Run
docker run --detach -p 8080:80 flowerpower/flowerpower.chat.gateway.api:0.1      //runs docker container with port mapping (where 80 is internal docker port and 8080 is actual machine port) "--detach" prevents console from entering inside of container 
docker run --detach --name testapi_2 --volume testapi-volume:/app/Files --publish 3333:80  flowerpower/testapi-windows:1.0 // same as above but also with volume assignment

docker image push flowerpower/flowerpower.chat.gateway.api:0.1  //publishesh docker image to hub
docker run --interactive --tty ubuntu bash // Runs new container with ubuntu and redirect command line to this ubuntu.
docker logs "container-name" -- show logs after container exit

#### Cassandra Docker ####
docker run -d --name cassandra-test --network cassandra-test-network -p 9042:9042 cassandra


#### Adding kubernetes node ####
1.First we need to modify cmdline.txt by adding "cgroup_enable=memory cgroup_memory=1" at the begining
sudo nano /boot/firmware/cmdline.txt

2. Change iptables settings:
sudo iptables -F
sudo update-alternatives --set iptables /usr/sbin/iptables-legacy
sudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
sudo reboot

3. Install docker via rancher script: curl https://releases.rancher.com/install-docker/19.03.sh | sh (only if you wnat to install wit option --docker)

4. If its masternode run: curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE="644" K3S_NODE_NAME="cluster1-raspi1"  sh -s

5. Get token from master node: cat /var/lib/rancher/k3s/server/node-token

6. Install kubernetes. K3S_URL is addres of master node and K3S_TOKEN is token you may find on your master node. 
curl -sfL https://get.k3s.io | K3S_TOKEN="K10829dfadcec479c3082316fd34ba58c66beaa6da0d9ae090f11eb1a373cb0213e::server:c25ece34c6f9671aec26fc0c63a0b9ca" K3S_URL="https://192.168.0.101:6443" K3S_NODE_NAME="cluster1-raspi3"  sh -s - --docker

#### Changing Ubuntu hostname ####
1. Type: sudo nano /etc/hostname 
2. Change defult hostname.
3. Type: sudo nano /etc/hosts
4. Replace any occurrence of the existing computer name with your new one.
5. Type: sudo reboot

#### Set Ubuntu static IP ####
1. Disble cloud networking by creating file: sudo nano /etc/cloud/cloud.cfg.d/01_disable_network.cfg
2. Type "network: {config: disabled}" as content
3. Create netplan file: sudo nano /etc/netplan/01-static-ip.yaml
4. Paste content (Change address):

network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      dhcp4: no
      addresses: [192.168.0.101/24]
      gateway4: 192.168.0.1
      nameservers:
        addresses: [192.168.0.1, 8.8.8.8]
6. Remove fiel 50-cloud-init.yaml:   sudo rm /etc/netplan/50-cloud-init.yaml
7. Restart: sudo reboot
        



